<html>

<head>
    <link rel="stylesheet" href="estellestyles.css">
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <script src="https://d3js.org/topojson.v3.min.js"></script>
    <script src="https://unpkg.com/scrollama"></script>
    <script src="https://cdn.jsdelivr.net/npm/d3-array@3"></script>
    <script src="https://cdn.jsdelivr.net/npm/d3-geo@3"></script>
    <script src="https://cdn.jsdelivr.net/npm/d3-geo-projection@4"></script>
    <script src="scroll.js"></script>
    <title>Fishy Business</title>
</head>

<body>

    <div id="graphic">
        <div id="vis">
            <!-- <div class="alignVertical"> -->
            <div class="menu fancyFont alignVertical">
                <h2>Catch of the Day</h2>
                <!-- Salmon Order -->
                <div class="order alignVertical">
                    <text id=salmon class="menuTitle hover-underline-animation fadeAnimation">Miso
                        Salmon | $31</text>
                    <p>Served with bok choy, ginger rice, and microgreens.</p>
                </div>
                <!-- Shrimp Order -->
                <div class="order alignVertical">
                    <text id=shrimp class="menuTitle hover-underline-animation fadeAnimation">Spicy
                        Cajun Shrimp | $27</text>
                    <p>Served with cheesy grits and a big spoon.</p>

                </div>
                <!-- Tilapia Order -->
                <div class="order alignVertical">
                    <text id=tilapia class="menuTitle hover-underline-animation fadeAnimation">Fried
                        Tilapia Sandwich | $23</text>
                    <p>Served with coleslaw, pickles, tartar sauce, and a side of fries.</p>
                </div>
                <!-- </div> -->
            </div>

            <div class="dish"></div>

            <div class="receipt fancyFont alignVertical hidden">
                <h2>Fishy Business</h2>
                <h3>www.fishy-business.onrender.com</h3>
                <hr class="dashed-line">
                <table>
                    <col width="70%">
                    <col width="30%">
                    <tr>
                        <th id="dishName"></th>
                        <th id="dishPrice"></th>
                    </tr>
                    <tr>
                        <th>Water</th>
                        <th id="waterPrice"></th>
                    </tr>
                    <tr>
                        <th>Land</th>
                        <th id="landPrice"></th>
                    </tr>
                    <tr>
                        <th>Nitrogen</th>
                        <th id="nitrogenPrice"></th>
                    </tr>
                    <tr>
                        <th>Phosphorous</th>
                        <th id="phosphorous"></th>
                    </tr>
                </table>
                <hr class="dashed-line">
            </div>

        </div>

        <div id="sections">

            <section id="menu" class="step">
                <div>
                    <header id=heading class="fancyFont">
                        <h1>Fishy Business</h1>
                        <h2>The cost of your filet from fish to sea</h2>
                    </header>
                    <h3 id="author">By Estelle Hooper, Eva Ruse, Gabriella Chu</h3>
                    <p>Welcome to our restaurant. I'm your server, Fishy Business.</p>
                    <p>Please order any of our specials!</p>
                    <div id='scrollInfo' class="invisible">
                        <h4 id="scrollText" class="textCenter bounce">Scroll to continue</h4>
                        <div class="scroll-down"></div>
                    </div>

                </div>
            </section>

            <div id="hiddenSections" class="hidden">
                <section id="dish" class="step">
                    <p>Enjoy your meal!</p>
                    <p>Scroll when you are ready to pay the bill.</p>
                </section>

                <section id="receipt" class="step">
                    <p>Enjoy your meal!</p>
                    <p>Scroll when you are ready to pay the bill.</p>
                </section>
<!--                 
                <section class="step">
                    <p>Enjoy your meal!</p>
                    <p>Scroll when you are ready to pay the bill.</p>
                </section> -->
            </div>


        </div>
    </div>
    <!-- <main>



        <div id="graphic" class="hidden">
            <div id="sections">
                <section class="step">
                    <div class="receipt">
                        <h4> The Cost of Your Filet </h4>
                        <h5> From Plate to Sea </h5>
                        <h6> Address: blah blah 123 st</h6>
                        <h6 id='foodOrder'></h6>
                        <hr class="dashed-line">
                        <p id="water"></p>
                        <p id="land"></p>
                        <p id="nitrogen"></p>
                        <p id="phosphorous"></p>
                    </div>
                </section>
                <section class="step">
                    <div class="receipt">
                        <h4> The Cost of Your Filet </h4>
                        <h5> From Plate to Sea </h5>
                        <h6> Address: blah blah 123 st</h6>
                        <h6 id='foodOrder'></h6>
                        <hr class="dashed-line">
                        <p id="water"></p>
                        <p id="land"></p>
                        <p id="nitrogen"></p>
                        <p id="phosphorous"></p>
                    </div>
                </section>
                <section class="step">
                    <div class="receipt">
                        <h4> The Cost of Your Filet </h4>
                        <h5> From Plate to Sea </h5>
                        <h6> Address: blah blah 123 st</h6>
                        <h6 id='foodOrder'></h6>
                        <hr class="dashed-line">
                        <p id="water"></p>
                        <p id="land"></p>
                        <p id="nitrogen"></p>
                        <p id="phosphorous"></p>
                    </div>
                </section>
                <section class="step">
                    <div class="receipt">
                        <h4> The Cost of Your Filet </h4>
                        <h5> From Plate to Sea </h5>
                        <h6> Address: blah blah 123 st</h6>
                        <h6 id='foodOrder'></h6>
                        <hr class="dashed-line">
                        <p id="water"></p>
                        <p id="land"></p>
                        <p id="nitrogen"></p>
                        <p id="phosphorous"></p>
                    </div>
                </section>
            </div>
            <div id="vis">
                <svg id="bar1" height="500" width="600"></svg>
            </div>
        </div>

        <div id="map" class="hidden">
            <svg id="choropleth" height="600" width="900" style="background: #EEEEEE; margin-top:50px"></svg>
        </div>
    </main> -->
</body>

<script>
    // d3.selectAll(".menuTitle").
    // const map_svg = d3.select("#choropleth");
    // const map_width = map_svg.attr("width");
    // const map_height = map_svg.attr("height");
    // const map_margin = { top: 20, right: 20, bottom: 20, left: 20 };
    // const mapWidth = map_width - map_margin.left - map_margin.right;
    // const mapHeight = map_height - map_margin.top - map_margin.bottom;
    // const map = map_svg.append("g")
    //     .attr("transform", "translate(" + map_margin.left + "," + map_margin.top + ")");

    const getData = async function () {

        let water_use = await d3.csv("data/freshwater-use-seafood.csv", d3.autotype);
        let land_use = await d3.csv("data/land-use-seafood.csv", d3.autotype);
        let nitrogen_emissions = await d3.csv("data/nitrogen-emissions-seafood.csv", d3.autotype);
        let phos_emissions = await d3.csv("data/phosphorous-emissions-seafood.csv", d3.autotype);


        // can either be Salmon, Shrimp, or Tilapia
        salmon_water_use = water_use.filter(d => d.Entity === 'Salmon (farmed)')[0]['Freshwater use (m3 / kg edible weight)']
        tilapia_water_use = water_use.filter(d => d.Entity === 'Tilapia (farmed)')[0]['Freshwater use (m3 / kg edible weight)']
        shrimp_water_use = water_use.filter(d => d.Entity === 'Shrimp (farmed)')[0]['Freshwater use (m3 / kg edible weight)']

        salmon_land_use = land_use.filter(d => d.Entity === 'Salmon (farmed)')[0]['Land use (m2 / kg edible weight)']
        tilapia_land_use = land_use.filter(d => d.Entity === 'Tilapia (farmed)')[0]['Land use (m2 / kg edible weight)']
        shrimp_land_use = land_use.filter(d => d.Entity === 'Shrimp (farmed)')[0]['Land use (m2 / kg edible weight)']

        salmon_nitrogen_emissions = nitrogen_emissions.filter(d => d.Entity === 'Salmon (farmed)')[0]['Nitrogen (kgN / t edible weight)']
        tilapia_nitrogen_emissions = nitrogen_emissions.filter(d => d.Entity === 'Tilapia (farmed)')[0]['Nitrogen (kgN / t edible weight)']
        shrimp_nitrogen_emissions = nitrogen_emissions.filter(d => d.Entity === 'Shrimp (farmed)')[0]['Nitrogen (kgN / t edible weight)']

        salmon_phos_emissions = phos_emissions.filter(d => d.Entity === 'Salmon (farmed)')[0]['Phosphorous (kgP / t edible weight)']
        tilapia_phos_emissions = phos_emissions.filter(d => d.Entity === 'Tilapia (farmed)')[0]['Phosphorous (kgP / t edible weight)']
        shrimp_phos_emissions = phos_emissions.filter(d => d.Entity === 'Shrimp (farmed)')[0]['Phosphorous (kgP / t edible weight)']


        // const chart1 = d3.select("#bar1");
        // const width1 = chart1.attr("width");
        // const height1 = chart1.attr("height");
        // const margin1 = { top: 35, right: 10, bottom: 45, left: 150 };
        // const chartWidth1 = width1 - margin1.left - margin1.right;
        // const chartHeight1 = height1 - margin1.top - margin1.bottom;
        // let annotations1 = chart1.append("g").attr("id", "annotations");
        // const chartArea1 = chart1.append("g").attr("transform", "translate(" + margin1.left + "," + margin1.top + ")");


        initialEstelle = async function () {
            currentDish = d3.selectAll('.currentDish').classed('fadeIn', false);
            await currentDish.transition().style('opacity', 0).end();

            currentDish.remove();
            addFish = true;

            menu = d3.select(".menu")
            menu.classed("hidden", false);
            menu.transition().style('opacity', 1).style('transform', "translateX(0px)")
        }

        estelle1 = async function () {
            menu = d3.select(".menu")
            await menu.transition().style('opacity', 0).style('transform', "translateX(-200px)").end();
            console.log(menu);
            addDish = d3.select('.dish')
            console.log(selectedFish)

            if (addFish == true) {
                menu.classed('hidden', true);
                addDish.append('img').attr('src', "images/" + selectedFish + ".jpg").attr('class', 'currentDish').classed('fadeIn', true);
                console.log('executed')
                addFish = false
            }
            currentDish = d3.select('.currentDish').classed('fadeIn', false);

            console.log('estelle1')
            
        }

        estelle2 = async function () {
            currentDish = d3.select('.currentDish').style('transform', "translateX(0px)");
            console.log('estelle2');
            currentDish.transition().style('opacity', 0).style('transform', "translateX(-200px)");

            // d3.select('.receipt').classed('hidden',false);
        }

        // createScales();

        d3.selectAll(".menuTitle")
            .on('click', orderUp)


        // global variable for fish selection: salmon, shrimp, tilapia
        var selectedFish = null

        // global boolean to track if the meal photo should be added
        var addFish = false

        function orderUp() {

            addFish = true;



            d3.selectAll('p').classed('hidden', false)

            menu = d3.select(".menu")
            orders = d3.selectAll(".order")
            menuTitles = d3.selectAll('.menuTitle')

            // the ones the user didn't select, make beige
            menuTitles.classed('orderNotSelected', true)
            orders.classed('orderNotSelected', true)
            d3.select(this).classed('orderNotSelected', false)
            d3.select(this.parentNode).classed('orderNotSelected', false)

            // cannot click another selection
            menu.style("pointer-events", "none")

            // turn off fading text
            menuSection = d3.select('section#menu')
            menuSection.selectAll(".fadeInOut").classed("fadeInOut", false)

            // make arrow visible
            d3.select('#scrollInfo').classed('invisible', false).classed('fadeIn', true);

            console.log('orderup')

            selectedFish = this.id;

            // d3.select('.menu').style('display', 'none')
            // d3.select('#menuContainer').style('display', 'none')

            if (selectedFish === 'salmon') {
                fish_water_use = salmon_water_use
                fish_land_use = salmon_land_use
                fish_nitrogen_emissions = salmon_nitrogen_emissions
                fish_phos_emissions = salmon_phos_emissions
            }
            else if (selectedFish === 'shrimp') {
                fish_water_use = shrimp_water_use
                fish_land_use = shrimp_land_use
                fish_nitrogen_emissions = shrimp_nitrogen_emissions
                fish_phos_emissions = shrimp_phos_emissions
            }
            else if (selectedFish === 'tilapia') {
                fish_water_use = tilapia_water_use
                fish_land_use = tilapia_land_use
                fish_nitrogen_emissions = tilapia_nitrogen_emissions
                fish_phos_emissions = tilapia_phos_emissions
            }

            // reveal next section
            dishSection = d3.select('#hiddenSections').classed('hidden',false);

            // draw default graph, water use
            chartArea1.selectAll('rect.bar').data(water_use)
                .join('rect')
                .attr('class', 'bar')
                .attr("fill", d => highlightBar(d.Entity.split('(')[0].substr(0, d.Entity.split('(')[0].length - 1)))
                .attr('x', d => barScale1(0))
                .attr('y', d => leftAxisScale1(d.Entity.split('(')[0].substr(0, d.Entity.split('(')[0].length - 1)))
                .attr("height", leftAxisScale1.bandwidth())
                .attr("width", d => barScale1(Number(d['Freshwater use (m3 / kg edible weight)'])) - barScale1(0))

            d3.selectAll('#water').text(salmon_water_use + ' water').style('color', 'red')
        }

        // source: https://towardsdatascience.com/how-i-created-an-interactive-scrolling-visualisation-with-d3-js-and-how-you-can-too-e116372e2c73

        let scroll = scroller().container(d3.select('#graphic'))
        scroll()
        let lastIndex, activeIndex = 0
        //This is where most of the magic happens. Every time the user scrolls, we receive a new index. First, we find all the irrelevant sections, and reduce their opacity. 
        scroll.on('active', function (index) {
            d3.selectAll('.step')
                .transition().duration(500)
                .style('opacity', function (d, i) { return i === index ? 1 : 0.1; });
            //Next, we selection from a range of activationFunctions (which we create), based on the index of the current section. 
            activeIndex = index
            console.log('active index')
            console.log(activeIndex);
            let sign = (activeIndex - lastIndex) < 0 ? -1 : 1;
            let scrolledSections = d3.range(lastIndex + sign, activeIndex + sign, sign);
            scrolledSections.forEach(i => {
                console.log('i')
                console.log(i)
                activationFunctions[i]();
            })
            lastIndex = activeIndex;
        })
        scroll.on('progress', function (index, progress) {
            if (index == 2 & progress > 0.7) { }
        })

        let activationFunctions = [initialEstelle, estelle1,estelle2]

    }

    getData();
</script>

</html>